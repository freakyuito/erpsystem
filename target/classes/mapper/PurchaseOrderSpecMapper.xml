<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.overseachem.erp.mapper.PurchaseOrderSpecMapper" >
  <resultMap id="BaseResultMap" type="cn.overseachem.erp.pojo.PurchaseOrderSpec" >
    <id column="spec_id" property="specId" jdbcType="INTEGER" />
    <result column="fk_purchase_num" property="fkPurchaseNum" jdbcType="VARCHAR" />
    <result column="pattern_id" property="patternId" jdbcType="CHAR" />
    <result column="color_id" property="colorId" jdbcType="CHAR" />
    <result column="length" property="length" jdbcType="INTEGER" />
    <result column="width" property="width" jdbcType="INTEGER" />
    <result column="thickness" property="thickness" jdbcType="REAL" />
    <result column="required_amount" property="requiredAmount" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="REAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    spec_id, fk_purchase_num, pattern_id, color_id, length, width, thickness, required_amount, 
    price
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.overseachem.erp.pojo.PurchaseOrderSpecExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from purchase_order_spec
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from purchase_order_spec
    where spec_id = #{specId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from purchase_order_spec
    where spec_id = #{specId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.overseachem.erp.pojo.PurchaseOrderSpecExample" >
    delete from purchase_order_spec
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.overseachem.erp.pojo.PurchaseOrderSpec" >
    insert into purchase_order_spec (spec_id, fk_purchase_num, pattern_id, 
      color_id, length, width, 
      thickness, required_amount, price
      )
    values (#{specId,jdbcType=INTEGER}, #{fkPurchaseNum,jdbcType=VARCHAR}, #{patternId,jdbcType=CHAR}, 
      #{colorId,jdbcType=CHAR}, #{length,jdbcType=INTEGER}, #{width,jdbcType=INTEGER}, 
      #{thickness,jdbcType=REAL}, #{requiredAmount,jdbcType=INTEGER}, #{price,jdbcType=REAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.overseachem.erp.pojo.PurchaseOrderSpec" >
    insert into purchase_order_spec
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="specId != null" >
        spec_id,
      </if>
      <if test="fkPurchaseNum != null" >
        fk_purchase_num,
      </if>
      <if test="patternId != null" >
        pattern_id,
      </if>
      <if test="colorId != null" >
        color_id,
      </if>
      <if test="length != null" >
        length,
      </if>
      <if test="width != null" >
        width,
      </if>
      <if test="thickness != null" >
        thickness,
      </if>
      <if test="requiredAmount != null" >
        required_amount,
      </if>
      <if test="price != null" >
        price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="specId != null" >
        #{specId,jdbcType=INTEGER},
      </if>
      <if test="fkPurchaseNum != null" >
        #{fkPurchaseNum,jdbcType=VARCHAR},
      </if>
      <if test="patternId != null" >
        #{patternId,jdbcType=CHAR},
      </if>
      <if test="colorId != null" >
        #{colorId,jdbcType=CHAR},
      </if>
      <if test="length != null" >
        #{length,jdbcType=INTEGER},
      </if>
      <if test="width != null" >
        #{width,jdbcType=INTEGER},
      </if>
      <if test="thickness != null" >
        #{thickness,jdbcType=REAL},
      </if>
      <if test="requiredAmount != null" >
        #{requiredAmount,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.overseachem.erp.pojo.PurchaseOrderSpecExample" resultType="java.lang.Integer" >
    select count(*) from purchase_order_spec
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update purchase_order_spec
    <set >
      <if test="record.specId != null" >
        spec_id = #{record.specId,jdbcType=INTEGER},
      </if>
      <if test="record.fkPurchaseNum != null" >
        fk_purchase_num = #{record.fkPurchaseNum,jdbcType=VARCHAR},
      </if>
      <if test="record.patternId != null" >
        pattern_id = #{record.patternId,jdbcType=CHAR},
      </if>
      <if test="record.colorId != null" >
        color_id = #{record.colorId,jdbcType=CHAR},
      </if>
      <if test="record.length != null" >
        length = #{record.length,jdbcType=INTEGER},
      </if>
      <if test="record.width != null" >
        width = #{record.width,jdbcType=INTEGER},
      </if>
      <if test="record.thickness != null" >
        thickness = #{record.thickness,jdbcType=REAL},
      </if>
      <if test="record.requiredAmount != null" >
        required_amount = #{record.requiredAmount,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update purchase_order_spec
    set spec_id = #{record.specId,jdbcType=INTEGER},
      fk_purchase_num = #{record.fkPurchaseNum,jdbcType=VARCHAR},
      pattern_id = #{record.patternId,jdbcType=CHAR},
      color_id = #{record.colorId,jdbcType=CHAR},
      length = #{record.length,jdbcType=INTEGER},
      width = #{record.width,jdbcType=INTEGER},
      thickness = #{record.thickness,jdbcType=REAL},
      required_amount = #{record.requiredAmount,jdbcType=INTEGER},
      price = #{record.price,jdbcType=REAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.overseachem.erp.pojo.PurchaseOrderSpec" >
    update purchase_order_spec
    <set >
      <if test="fkPurchaseNum != null" >
        fk_purchase_num = #{fkPurchaseNum,jdbcType=VARCHAR},
      </if>
      <if test="patternId != null" >
        pattern_id = #{patternId,jdbcType=CHAR},
      </if>
      <if test="colorId != null" >
        color_id = #{colorId,jdbcType=CHAR},
      </if>
      <if test="length != null" >
        length = #{length,jdbcType=INTEGER},
      </if>
      <if test="width != null" >
        width = #{width,jdbcType=INTEGER},
      </if>
      <if test="thickness != null" >
        thickness = #{thickness,jdbcType=REAL},
      </if>
      <if test="requiredAmount != null" >
        required_amount = #{requiredAmount,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=REAL},
      </if>
    </set>
    where spec_id = #{specId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.overseachem.erp.pojo.PurchaseOrderSpec" >
    update purchase_order_spec
    set fk_purchase_num = #{fkPurchaseNum,jdbcType=VARCHAR},
      pattern_id = #{patternId,jdbcType=CHAR},
      color_id = #{colorId,jdbcType=CHAR},
      length = #{length,jdbcType=INTEGER},
      width = #{width,jdbcType=INTEGER},
      thickness = #{thickness,jdbcType=REAL},
      required_amount = #{requiredAmount,jdbcType=INTEGER},
      price = #{price,jdbcType=REAL}
    where spec_id = #{specId,jdbcType=INTEGER}
  </update>

  <select id="groupByColorIdWithPurchaseNum" parameterType="String" resultMap="BaseResultMap">
    select purchase_order_spec.* from purchase_order_spec inner join purchase_order
    on fk_purchase_num = purchase_num where purchase_num = #{purchaseNum} group by color_id
  </select>
  <select id="selectSpecsByPurchaseNumAndColorId" resultMap="BaseResultMap">
    SELECT * FROM purchase_order_spec WHERE fk_purchase_num = #{purchaseNum} AND color_id = #{colorId};
  </select>
</mapper>