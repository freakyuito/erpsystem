<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.overseachem.erp.mapper.GodownEntryMapper">
    <resultMap id="BaseResultMap" type="cn.overseachem.erp.pojo.GodownEntry">
        <id column="inventory_num" property="inventoryNum" jdbcType="VARCHAR"/>
        <result column="generate_time" property="generateTime" jdbcType="TIMESTAMP"/>
        <result column="commander_id" property="commanderId" jdbcType="INTEGER"/>
        <result column="recorder_id" property="recorderId" jdbcType="INTEGER"/>
        <result column="inspector_id" property="inspectorId" jdbcType="INTEGER"/>
        <result column="monitor_id" property="monitorId" jdbcType="INTEGER"/>
        <result column="workgroup_id" property="workgroupId" jdbcType="INTEGER"/>
        <result column="fk_operation_records_id" property="fkOperationRecordsId" jdbcType="VARCHAR"/>
        <result column="machine_id" property="machineId" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    inventory_num, generate_time, commander_id, recorder_id, inspector_id, monitor_id, 
    workgroup_id, fk_operation_records_id, machine_id
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.overseachem.erp.pojo.GodownEntryExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from godown_entry
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from godown_entry
        where inventory_num = #{inventoryNum,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from godown_entry
    where inventory_num = #{inventoryNum,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="cn.overseachem.erp.pojo.GodownEntryExample">
        delete from godown_entry
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.overseachem.erp.pojo.GodownEntry">
    insert into godown_entry (inventory_num, generate_time, commander_id, 
      recorder_id, inspector_id, monitor_id, 
      workgroup_id, fk_operation_records_id, machine_id
      )
    values (#{inventoryNum,jdbcType=VARCHAR}, #{generateTime,jdbcType=TIMESTAMP}, #{commanderId,jdbcType=INTEGER}, 
      #{recorderId,jdbcType=INTEGER}, #{inspectorId,jdbcType=INTEGER}, #{monitorId,jdbcType=INTEGER}, 
      #{workgroupId,jdbcType=INTEGER}, #{fkOperationRecordsId,jdbcType=VARCHAR}, #{machineId,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="cn.overseachem.erp.pojo.GodownEntry">
        insert into godown_entry
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="inventoryNum != null">
                inventory_num,
            </if>
            <if test="generateTime != null">
                generate_time,
            </if>
            <if test="commanderId != null">
                commander_id,
            </if>
            <if test="recorderId != null">
                recorder_id,
            </if>
            <if test="inspectorId != null">
                inspector_id,
            </if>
            <if test="monitorId != null">
                monitor_id,
            </if>
            <if test="workgroupId != null">
                workgroup_id,
            </if>
            <if test="fkOperationRecordsId != null">
                fk_operation_records_id,
            </if>
            <if test="machineId != null">
                machine_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="inventoryNum != null">
                #{inventoryNum,jdbcType=VARCHAR},
            </if>
            <if test="generateTime != null">
                #{generateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="commanderId != null">
                #{commanderId,jdbcType=INTEGER},
            </if>
            <if test="recorderId != null">
                #{recorderId,jdbcType=INTEGER},
            </if>
            <if test="inspectorId != null">
                #{inspectorId,jdbcType=INTEGER},
            </if>
            <if test="monitorId != null">
                #{monitorId,jdbcType=INTEGER},
            </if>
            <if test="workgroupId != null">
                #{workgroupId,jdbcType=INTEGER},
            </if>
            <if test="fkOperationRecordsId != null">
                #{fkOperationRecordsId,jdbcType=VARCHAR},
            </if>
            <if test="machineId != null">
                #{machineId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.overseachem.erp.pojo.GodownEntryExample"
            resultType="java.lang.Integer">
        select count(*) from godown_entry
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update godown_entry
        <set>
            <if test="record.inventoryNum != null">
                inventory_num = #{record.inventoryNum,jdbcType=VARCHAR},
            </if>
            <if test="record.generateTime != null">
                generate_time = #{record.generateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.commanderId != null">
                commander_id = #{record.commanderId,jdbcType=INTEGER},
            </if>
            <if test="record.recorderId != null">
                recorder_id = #{record.recorderId,jdbcType=INTEGER},
            </if>
            <if test="record.inspectorId != null">
                inspector_id = #{record.inspectorId,jdbcType=INTEGER},
            </if>
            <if test="record.monitorId != null">
                monitor_id = #{record.monitorId,jdbcType=INTEGER},
            </if>
            <if test="record.workgroupId != null">
                workgroup_id = #{record.workgroupId,jdbcType=INTEGER},
            </if>
            <if test="record.fkOperationRecordsId != null">
                fk_operation_records_id = #{record.fkOperationRecordsId,jdbcType=VARCHAR},
            </if>
            <if test="record.machineId != null">
                machine_id = #{record.machineId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update godown_entry
        set inventory_num = #{record.inventoryNum,jdbcType=VARCHAR},
        generate_time = #{record.generateTime,jdbcType=TIMESTAMP},
        commander_id = #{record.commanderId,jdbcType=INTEGER},
        recorder_id = #{record.recorderId,jdbcType=INTEGER},
        inspector_id = #{record.inspectorId,jdbcType=INTEGER},
        monitor_id = #{record.monitorId,jdbcType=INTEGER},
        workgroup_id = #{record.workgroupId,jdbcType=INTEGER},
        fk_operation_records_id = #{record.fkOperationRecordsId,jdbcType=VARCHAR},
        machine_id = #{record.machineId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.overseachem.erp.pojo.GodownEntry">
        update godown_entry
        <set>
            <if test="generateTime != null">
                generate_time = #{generateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="commanderId != null">
                commander_id = #{commanderId,jdbcType=INTEGER},
            </if>
            <if test="recorderId != null">
                recorder_id = #{recorderId,jdbcType=INTEGER},
            </if>
            <if test="inspectorId != null">
                inspector_id = #{inspectorId,jdbcType=INTEGER},
            </if>
            <if test="monitorId != null">
                monitor_id = #{monitorId,jdbcType=INTEGER},
            </if>
            <if test="workgroupId != null">
                workgroup_id = #{workgroupId,jdbcType=INTEGER},
            </if>
            <if test="fkOperationRecordsId != null">
                fk_operation_records_id = #{fkOperationRecordsId,jdbcType=VARCHAR},
            </if>
            <if test="machineId != null">
                machine_id = #{machineId,jdbcType=INTEGER},
            </if>
        </set>
        where inventory_num = #{inventoryNum,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.overseachem.erp.pojo.GodownEntry">
    update godown_entry
    set generate_time = #{generateTime,jdbcType=TIMESTAMP},
      commander_id = #{commanderId,jdbcType=INTEGER},
      recorder_id = #{recorderId,jdbcType=INTEGER},
      inspector_id = #{inspectorId,jdbcType=INTEGER},
      monitor_id = #{monitorId,jdbcType=INTEGER},
      workgroup_id = #{workgroupId,jdbcType=INTEGER},
      fk_operation_records_id = #{fkOperationRecordsId,jdbcType=VARCHAR},
      machine_id = #{machineId,jdbcType=INTEGER}
    where inventory_num = #{inventoryNum,jdbcType=VARCHAR}
  </update>
    <select id="getByCriteria" resultType="hashmap">
    SELECT godown_entry.generate_time,godown_entry.workgroup_id,godown_entry.inventory_num as a,godown_entry.machine_id,godown_entry.monitor_id,godown_entry.commander_id,godown_entry.inspector_id,godown_entry.recorder_id,(SELECT SUM(godown_entry_spec.finished_quantity) FROM godown_entry_spec WHERE godown_entry_spec.fk_inventory_num = a) AS finished_quantity,(SELECT SUM(godown_entry_spec.finished_weight) FROM godown_entry_spec WHERE godown_entry_spec.fk_inventory_num = a) AS finished_weight,(SELECT SUM(godown_entry_spec.waste_weight) FROM godown_entry_spec WHERE godown_entry_spec.fk_inventory_num = a) AS  waste_weight
FROM (product_order_spec INNER JOIN godown_entry_spec ON product_order_spec.batch_num = godown_entry_spec.fk_batch_num INNER JOIN godown_entry ON godown_entry_spec.fk_inventory_num = godown_entry.inventory_num) WHERE godown_entry.generate_time BETWEEN #{startTime} AND #{endTime} AND godown_entry.machine_id LIKE '%${machineId}%' AND godown_entry.workgroup_id LIKE '%${workgroupId}%' AND godown_entry.commander_id LIKE '%${commanderId}%' AND godown_entry.inventory_num LIKE '%${inventoryNum}%' GROUP BY godown_entry.inventory_num;
  </select>
</mapper>